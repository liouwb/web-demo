<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!--从application.yml配置文件中获取配置信息-->
    <springProperty scope="context" name="logLevel" source="logging.root.level"/>
    <!--日志输出路径,application.yml 配置的logging file.path获取-->
    <springProperty scope="context" name="logPath" source="logging.file.path"/>

    <!--输出到控制台-->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <!--此日志appender是为开发使用，debug级别-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>debug</level>
        </filter>
        <encoder>
            <Pattern>%d{yyyy/MM/dd-HH:mm:ss} [%thread] %-5level %logger- %msg%n</Pattern>
            <!--设置字符集 -->
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!--输出日志到文件，时间滚动输出-->
    <appender name="INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logPath}/web-demo.log</file>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 每天日志归档路径以及格式 -->
            <fileNamePattern>${logPath}/web-demo-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!--日志文档保留天数-->
            <maxHistory>100</maxHistory>
        </rollingPolicy>
        <!--此日志文档只记录info级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>info</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!--输出日志到文件，时间滚动输出 error级别-->
    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logPath}/web-demo-error.log</file>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 每天日志归档路径以及格式 -->
            <fileNamePattern>${logPath}/web-demo-error-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!--日志文档保留天数-->
            <maxHistory>100</maxHistory>
        </rollingPolicy>
        <!--此日志文档只记录error级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>error</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!--设置不同目录下，日志打印级别-->
    <!--与application下logging.level配置效果一样，application.yml配置优先级高于xml文件-->
<!--    <logger name="java.sql" level="DEBUG"/>-->
<!--    <logger name="com.liouxb.web.demo.mapper" level="DEBUG"></logger>-->
<!--    <logger name="com.liouxb.web.demo.service.impl" level="INFO"></logger>-->
<!--    <logger name="com.liouxb.web.demo.controller" level="INFO"></logger>-->

    <!--    &lt;!&ndash;不同环境下的配置&ndash;&gt;-->
    <!--    <springProfile name="dev">-->
    <!--        <root level="${logLevel}">-->
    <!--            <appender-ref ref="CONSOLE"/>-->
    <!--            <appender-ref ref="INFO_FILE"/>-->
    <!--        </root>-->
    <!--    </springProfile>-->
    <!--    <springProfile name="test">-->
    <!--        <root level="${logLevel}">-->
    <!--            <appender-ref ref="CONSOLE"/>-->
    <!--            <appender-ref ref="INFO_FILE"/>-->
    <!--        </root>-->
    <!--    </springProfile>-->
    <!--    &lt;!&ndash; 生产环境:输出到文件&ndash;&gt;-->
    <!--    <springProfile name="prod">-->
    <!--        <root level="${logLevel}">-->
    <!--            <appender-ref ref="INFO_FILE"/>-->
    <!--        </root>-->
    <!--    </springProfile>-->

    <root level="${logLevel}">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="INFO_FILE"/>
        <appender-ref ref="ERROR_FILE"/>
    </root>
</configuration>